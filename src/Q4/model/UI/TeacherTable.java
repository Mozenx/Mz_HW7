
package Q4.model.UI;

import Q4.model.Student;
import Q4.model.Teacher;
import Q4.model.dao.DaoTeach;
import Q4.model.dao.TeacherDao;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.awt.event.ActionEvent;
import java.sql.SQLException;
import java.util.List;

/**
 *
 * @author Mozen
 */
public class TeacherTable extends javax.swing.JFrame {

    /**
     * Creates new form studentTable
     */
    public TeacherTable() throws SQLException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() throws SQLException {

        setTitle("List of Teachers");
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        //setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);


//        DaoTeach dao = new TeacherDao();
//        List<Teacher> all;
//        all = dao.findAll();
//        Object [][] objects = new Object[all.size()][4];
//        for(int i = 0; i<all.size(); i++){
//
//            objects[i][0] = all.get(i).getfName();
//            objects[i][1] = all.get(i).getlName();
//            objects[i][2] = all.get(i).gettId();
//
//        }
//        String [] column = {"FirstName","LastName","TeacherId"};
//
//        TableModel dm = new DefaultTableModel(objects,column);
//        jTable1.setModel(dm);
        updateTable();
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("New");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton4ActionPerformed(evt);
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        });

        jButton3.setText("Find");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton3ActionPerformed(evt);
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        });

        {
            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jButton1)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jButton2)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jButton4)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jButton3)))
                                    .addGap(0, 32, Short.MAX_VALUE))
            );
        }

        pack();
    }// </editor-fold>

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {

        AddingFrame add = new AddingFrame();
        add.setVisible(true);
        add.jButton1.setEnabled(false);
        add.setTitle("Add New Teacher");
        add.isStudent = false;


    }//add button

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {

        int row = jTable1.getSelectedRow();
        if(row != -1 ) {
            String fName = jTable1.getModel().getValueAt(row, 0).toString();
            String lName = jTable1.getModel().getValueAt(row, 1).toString();
            //String stId = jTable1.getModel().getValueAt(row,2).toString();
            String tchId = jTable1.getModel().getValueAt(row, 2).toString();
            AddingFrame add = new AddingFrame();
            add.jButton2.setEnabled(false);
            add.jTextField1.setText(fName);
            add.jTextField2.setText(lName);
            //add.jTextField3.setText(stId);
            add.jTextField4.setText(tchId);
            add.jTextField4.setEnabled(false);
            add.setTitle("Update Teacher");
            add.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(null,"please select a row!!!");
        }

    }//update button

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {
        int row = jTable1.getSelectedRow();
        String  cell = jTable1.getModel().getValueAt(row,2).toString();
        new TeacherDao().deleteById(cell);
        System.out.println(cell);
        JOptionPane.showMessageDialog(null,"Delete Successfully");
        updateTable();
    }//delete button

    private void jButton3ActionPerformed(ActionEvent evt) throws SQLException {

        int row = jTable1.getSelectedRow();
        String cell = jTable1.getModel().getValueAt(row,2).toString();
        System.out.println(cell);
        List<Student> students;
        DaoTeach dao = new TeacherDao();
        students = dao.findTeachers(cell);
        for(Student a : students) {
            System.out.println(a.getfName());
        }

    }//find button

    public static void updateTable() throws SQLException {
        DaoTeach dao = new TeacherDao();
        List<Teacher> all;
        all = dao.findAll();
        Object [][] objects = new Object[all.size()][4];
        for(int i = 0; i<all.size(); i++){

            objects[i][0] = all.get(i).getfName();
            objects[i][1] = all.get(i).getlName();
            objects[i][2] = all.get(i).gettId();

        }
        String [] column = {"FirstName","LastName","TeacherId"};

        TableModel dm = new DefaultTableModel(objects,column);
        jTable1.setModel(dm);
    }

    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable jTable1;
    // End of variables declaration
}

